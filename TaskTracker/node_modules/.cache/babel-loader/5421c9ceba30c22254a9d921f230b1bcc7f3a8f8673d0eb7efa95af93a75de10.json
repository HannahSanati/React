{"ast":null,"code":"var _jsxFileName = \"D:\\\\bootcamp\\\\react\\\\task-traker-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\n\n// our events are stored in our App.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    text: \"doctor appoinment\",\n    day: \"feb 5th at 2pm\",\n    reminder: true\n  }, {\n    id: 2,\n    text: \"doctor \",\n    day: \"feb \",\n    reminder: true\n  }, {\n    id: 3,\n    text: \"hi \",\n    day: \"jan \",\n    reminder: false\n  }]);\n  // we use it here bcs we wanna be able to use this whitin another components\n  // if we keep it in Tasks.js we could only use that in that specific componenet\n  // setTask([...tasks, {}])  add a new object to tasks\n\n  //Delete Task\n  const deleteTask = id => {\n    console.log('delete', id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"hL8x43HWVHRAvui5rzRtR3H+mOE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Header","Tasks","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","id","text","day","reminder","deleteTask","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onDelete","_c","$RefreshReg$"],"sources":["D:/bootcamp/react/task-traker-app/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\n\n// our events are stored in our App.js\nconst App = () => {\n  const [tasks, setTasks] = useState([\n    {\n      id: 1,\n      text: \"doctor appoinment\",\n      day: \"feb 5th at 2pm\",\n      reminder: true,\n    },\n    {\n      id: 2,\n      text: \"doctor \",\n      day: \"feb \",\n      reminder: true,\n    },\n    {\n      id: 3,\n      text: \"hi \",\n      day: \"jan \",\n      reminder: false,\n    },\n  ]);\n  // we use it here bcs we wanna be able to use this whitin another components\n  // if we keep it in Tasks.js we could only use that in that specific componenet\n  // setTask([...tasks, {}])  add a new object to tasks\n\n  //Delete Task\n  const deleteTask = (id) => {\n    console.log('delete', id);\n  }\n\n  return (\n    <div className=\"container\">\n      <Header />\n      <Tasks tasks={tasks} onDelete={deleteTask}/>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,KAAK,MAAM,oBAAoB;;AAEtC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,CACjC;IACES,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,mBAAmB;IACzBC,GAAG,EAAE,gBAAgB;IACrBC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEH,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,SAAS;IACfC,GAAG,EAAE,MAAM;IACXC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEH,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,KAAK;IACXC,GAAG,EAAE,MAAM;IACXC,QAAQ,EAAE;EACZ,CAAC,CACF,CAAC;EACF;EACA;EACA;;EAEA;EACA,MAAMC,UAAU,GAAIJ,EAAE,IAAK;IACzBK,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEN,EAAE,CAAC;EAC3B,CAAC;EAED,oBACEL,OAAA;IAAKY,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBb,OAAA,CAACH,MAAM;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVjB,OAAA,CAACF,KAAK;MAACK,KAAK,EAAEA,KAAM;MAACe,QAAQ,EAAET;IAAW;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEV,CAAC;AAACf,EAAA,CApCID,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AAsCT,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}