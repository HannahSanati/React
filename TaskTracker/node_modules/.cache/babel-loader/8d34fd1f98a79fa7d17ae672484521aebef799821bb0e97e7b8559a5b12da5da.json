{"ast":null,"code":"import{useState}from\"react\";import\"./App.css\";import Header from\"./components/Header\";import Tasks from\"./components/Tasks\";import AddTask from\"./components/AddTask\";// our events are stored in our App.js\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[showAddTask,setShowAddTask]=useState(false);const[tasks,setTasks]=useState([{id:1,text:\"doctor appoinment\",day:\"feb 5th at 2pm\",reminder:true},{id:2,text:\"doctor \",day:\"feb \",reminder:true},{id:3,text:\"hi \",day:\"jan \",reminder:false}]);// State: we use it here bcs we wanna be able to use this whitin another components\n// if we keep it in Tasks.js we could only use that in that specific componenet\n// setTask([...tasks, {}])  add a new object to tasks\n//Add Task\nconst addTask=task=>{// create id by myself\nconst id=Math.floor(Math.random()*10000)+1;const newTask={id,...task};setTasks([...tasks,newTask]);};//Delete Task\nconst deleteTask=id=>{setTasks(tasks.filter(task=>task.id!==id));};//Toggle Reminder\nconst toggleReminder=id=>{setTasks(tasks.map(task=>task.id===id?{...task,reminder:!task.reminder}:task));};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(Header,{onAdd:()=>setShowAddTask(!showAddTask),showAdd:showAddTask}),showAddTask&&/*#__PURE__*/_jsx(AddTask,{onAdd:addTask}),tasks.length>0?/*#__PURE__*/_jsx(Tasks,{tasks:tasks,onDelete:deleteTask,onToggle:toggleReminder}):\"No Tasks To Show\"]});};export default App;","map":{"version":3,"names":["useState","Header","Tasks","AddTask","jsx","_jsx","jsxs","_jsxs","App","showAddTask","setShowAddTask","tasks","setTasks","id","text","day","reminder","addTask","task","Math","floor","random","newTask","deleteTask","filter","toggleReminder","map","className","children","onAdd","showAdd","length","onDelete","onToggle"],"sources":["D:/bootcamp/react/task-traker-app/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\n\n// our events are stored in our App.js\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([\n    {\n      id: 1,\n      text: \"doctor appoinment\",\n      day: \"feb 5th at 2pm\",\n      reminder: true,\n    },\n    {\n      id: 2,\n      text: \"doctor \",\n      day: \"feb \",\n      reminder: true,\n    },\n    {\n      id: 3,\n      text: \"hi \",\n      day: \"jan \",\n      reminder: false,\n    },\n  ]);\n  // State: we use it here bcs we wanna be able to use this whitin another components\n  // if we keep it in Tasks.js we could only use that in that specific componenet\n  // setTask([...tasks, {}])  add a new object to tasks\n\n  //Add Task\n  const addTask = (task) => {\n    // create id by myself\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = { id, ...task };\n    setTasks([...tasks, newTask]);\n  };\n\n  //Delete Task\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  //Toggle Reminder\n  const toggleReminder = (id) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: !task.reminder } : task\n      )\n    );\n  };\n\n  return (\n    <div className=\"container\">\n      <Header\n        onAdd={() => setShowAddTask(!showAddTask)}\n        showAdd={showAddTask}\n      />\n      {/* && it means if its true then */}\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\n      ) : (\n        \"No Tasks To Show\"\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,OAAO,CAChC,MAAO,WAAW,CAClB,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CACtC,MAAO,CAAAC,OAAO,KAAM,sBAAsB,CAE1C;AAAA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBACA,KAAM,CAAAC,GAAG,CAAGA,CAAA,GAAM,CAChB,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGV,QAAQ,CAAC,KAAK,CAAC,CACrD,KAAM,CAACW,KAAK,CAAEC,QAAQ,CAAC,CAAGZ,QAAQ,CAAC,CACjC,CACEa,EAAE,CAAE,CAAC,CACLC,IAAI,CAAE,mBAAmB,CACzBC,GAAG,CAAE,gBAAgB,CACrBC,QAAQ,CAAE,IACZ,CAAC,CACD,CACEH,EAAE,CAAE,CAAC,CACLC,IAAI,CAAE,SAAS,CACfC,GAAG,CAAE,MAAM,CACXC,QAAQ,CAAE,IACZ,CAAC,CACD,CACEH,EAAE,CAAE,CAAC,CACLC,IAAI,CAAE,KAAK,CACXC,GAAG,CAAE,MAAM,CACXC,QAAQ,CAAE,KACZ,CAAC,CACF,CAAC,CACF;AACA;AACA;AAEA;AACA,KAAM,CAAAC,OAAO,CAAIC,IAAI,EAAK,CACxB;AACA,KAAM,CAAAL,EAAE,CAAGM,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,CAAG,KAAK,CAAC,CAAG,CAAC,CAChD,KAAM,CAAAC,OAAO,CAAG,CAAET,EAAE,CAAE,GAAGK,IAAK,CAAC,CAC/BN,QAAQ,CAAC,CAAC,GAAGD,KAAK,CAAEW,OAAO,CAAC,CAAC,CAC/B,CAAC,CAED;AACA,KAAM,CAAAC,UAAU,CAAIV,EAAE,EAAK,CACzBD,QAAQ,CAACD,KAAK,CAACa,MAAM,CAAEN,IAAI,EAAKA,IAAI,CAACL,EAAE,GAAKA,EAAE,CAAC,CAAC,CAClD,CAAC,CAED;AACA,KAAM,CAAAY,cAAc,CAAIZ,EAAE,EAAK,CAC7BD,QAAQ,CACND,KAAK,CAACe,GAAG,CAAER,IAAI,EACbA,IAAI,CAACL,EAAE,GAAKA,EAAE,CAAG,CAAE,GAAGK,IAAI,CAAEF,QAAQ,CAAE,CAACE,IAAI,CAACF,QAAS,CAAC,CAAGE,IAC3D,CACF,CAAC,CACH,CAAC,CAED,mBACEX,KAAA,QAAKoB,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBvB,IAAA,CAACJ,MAAM,EACL4B,KAAK,CAAEA,CAAA,GAAMnB,cAAc,CAAC,CAACD,WAAW,CAAE,CAC1CqB,OAAO,CAAErB,WAAY,CACtB,CAAC,CAEDA,WAAW,eAAIJ,IAAA,CAACF,OAAO,EAAC0B,KAAK,CAAEZ,OAAQ,CAAE,CAAC,CAC1CN,KAAK,CAACoB,MAAM,CAAG,CAAC,cACf1B,IAAA,CAACH,KAAK,EAACS,KAAK,CAAEA,KAAM,CAACqB,QAAQ,CAAET,UAAW,CAACU,QAAQ,CAAER,cAAe,CAAE,CAAC,CAEvE,kBACD,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAjB,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}