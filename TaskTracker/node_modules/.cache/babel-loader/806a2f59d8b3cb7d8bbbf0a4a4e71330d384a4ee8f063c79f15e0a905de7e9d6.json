{"ast":null,"code":"var _jsxFileName = \"D:\\\\bootcamp\\\\react\\\\task-traker-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\n\n// our events are stored in our App.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  // State: we use it here bcs we wanna be able to use this whitin another components\n  // if we keep it in Tasks.js we could only use that in that specific componenet\n  // setTask([...tasks, {}])  add a new object to tasks\n\n  //Add Task\n  const addTask = task => {\n    // create id by myself\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = {\n      id,\n      ...task\n    };\n    setTasks([...tasks, newTask]);\n  };\n\n  //Edit Task\n  const editTask = id => {\n    setTasks(tasks.map(task => task.id));\n  };\n\n  //Delete Task\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n\n  //Toggle Reminder\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => task.id === id ? {\n      ...task,\n      reminder: !task.reminder\n    } : task));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onAdd: () => setShowAddTask(!showAddTask),\n      showAdd: showAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 23\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onEdit: editTask,\n      onDelete: deleteTask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this) : \"No Tasks To Show\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"s8LzkA5aeSm1dim22ZlWGmFnnlE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Header","Tasks","AddTask","jsxDEV","_jsxDEV","App","_s","showAddTask","setShowAddTask","tasks","setTasks","addTask","task","id","Math","floor","random","newTask","editTask","map","deleteTask","filter","toggleReminder","reminder","className","children","onAdd","showAdd","fileName","_jsxFileName","lineNumber","columnNumber","length","onEdit","onDelete","onToggle","_c","$RefreshReg$"],"sources":["D:/bootcamp/react/task-traker-app/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\n\n// our events are stored in our App.js\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  // State: we use it here bcs we wanna be able to use this whitin another components\n  // if we keep it in Tasks.js we could only use that in that specific componenet\n  // setTask([...tasks, {}])  add a new object to tasks\n\n  //Add Task\n  const addTask = (task) => {\n    // create id by myself\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = { id, ...task };\n    setTasks([...tasks, newTask]);\n  };\n\n  //Edit Task\n  const editTask = (id) => {\n    setTasks(tasks.map((task) => task.id ))\n  }\n\n\n  //Delete Task\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  //Toggle Reminder\n  const toggleReminder = (id) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: !task.reminder } : task\n      )\n    );\n  };\n\n  return (\n    <div className=\"container\">\n      <Header\n        onAdd={() => setShowAddTask(!showAddTask)}\n        showAdd={showAddTask}\n      />\n      {/* && it means if its true then */}\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} onEdit={editTask} onDelete={deleteTask} onToggle={toggleReminder} />\n      ) : (\n        \"No Tasks To Show\"\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,OAAO,MAAM,sBAAsB;;AAE1C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC;EACA;EACA;;EAEA;EACA,MAAMY,OAAO,GAAIC,IAAI,IAAK;IACxB;IACA,MAAMC,EAAE,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC;IAChD,MAAMC,OAAO,GAAG;MAAEJ,EAAE;MAAE,GAAGD;IAAK,CAAC;IAC/BF,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEQ,OAAO,CAAC,CAAC;EAC/B,CAAC;;EAED;EACA,MAAMC,QAAQ,GAAIL,EAAE,IAAK;IACvBH,QAAQ,CAACD,KAAK,CAACU,GAAG,CAAEP,IAAI,IAAKA,IAAI,CAACC,EAAG,CAAC,CAAC;EACzC,CAAC;;EAGD;EACA,MAAMO,UAAU,GAAIP,EAAE,IAAK;IACzBH,QAAQ,CAACD,KAAK,CAACY,MAAM,CAAET,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC,CAAC;EAClD,CAAC;;EAED;EACA,MAAMS,cAAc,GAAIT,EAAE,IAAK;IAC7BH,QAAQ,CACND,KAAK,CAACU,GAAG,CAAEP,IAAI,IACbA,IAAI,CAACC,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGD,IAAI;MAAEW,QAAQ,EAAE,CAACX,IAAI,CAACW;IAAS,CAAC,GAAGX,IAC3D,CACF,CAAC;EACH,CAAC;EAED,oBACER,OAAA;IAAKoB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBrB,OAAA,CAACJ,MAAM;MACL0B,KAAK,EAAEA,CAAA,KAAMlB,cAAc,CAAC,CAACD,WAAW,CAAE;MAC1CoB,OAAO,EAAEpB;IAAY;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC,EAEDxB,WAAW,iBAAIH,OAAA,CAACF,OAAO;MAACwB,KAAK,EAAEf;IAAQ;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC1CtB,KAAK,CAACuB,MAAM,GAAG,CAAC,gBACf5B,OAAA,CAACH,KAAK;MAACQ,KAAK,EAAEA,KAAM;MAACwB,MAAM,EAAEf,QAAS;MAACgB,QAAQ,EAAEd,UAAW;MAACe,QAAQ,EAAEb;IAAe;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,GAEzF,kBACD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACzB,EAAA,CAlDID,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AAoDT,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}